DATABASES

    Add the last line to this in settings.py
    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'main.apps.MainConfig',
    ]

    Below are examples on making models (done in models.py)
    class TodoList(models.Model):
        name = models.CharField(max_length=200)

        def __str__(self):  # this is a helper function, not needed
            return self.name

    class Item(models.Model):
        todolist = models.ForeignKey(TodoList, on_delete=models.CASCADE)
        text = models.CharField(max_length=300)
        complete = models.BooleanField()

        def __str__(self):
            return self.text

    These two terminal actions will apply the models
    main is the name of the thingy
    python manage.py makemigrations main -
    python manage.py migrate - apply the migrations

    # making a model
    t = TodoList(name="todo List")
    t.save()

    # getting the objects
    TodoList.objects.all()
    TodoList.objects.get(id=1)
    TodoList.objects.get(name = "todo List")
    t.item_set.all()

    # creating an item
    t.item_set.create(text="Shower bitch", complete = False)

    # put in urls.py
    urlpatterns = [
        path("<str:name>", views.index, name="views"), # for a string
        # path("<int:id>", views.index, name="views"), # for an integer
    ]
    # put in views.py
    def index(response, name):
        ls = TodoList.objects.get(name=name)
        item = ls.item_set.get(id=1)
        return HttpResponse("<h1>%s<h1><br></br><p>%s</p>" %(ls.name, item.text))  # HTML code goes here

HTML TEMPLATES

    base.html
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>{% block title %} This is da website {% endblock %}</title>
    </head>
        <body>
            <div id="content">
                {% block content %}

                {% endblock %}
            </div>
        </body>
    </html>

    home.html
    {% extends 'main/base.html' %}
    <div id="content">
        {% block content %}
        <h1>Home Page </h1>
        {% endblock %}
    </div>

    list.html
    {% extends 'main/base.html' %}

    {% block title %}
    To do List
    {% endblock %}

    {%block content %}
    <h1>{{ls.name}}</h1>
        <ul>
            {%for item in ls.item_set.all %} <!-- Do not do all() -->
                {%if item.text|length >= 10 %}
                    <li>{{item.text}}</li> <!-- do not include () in most cases -->
                {%elif item.text|length >= 8 %}
                    <li>{{item.text}} is yes</li>
                {% else %}
                    <li>{{item.text}} is no</li>
            {% endif %} <!-- notice that elif and else statements don't need endif -->
            {% endfor %}
        </ul>

    {% endblock %}

    views.py
    from django.shortcuts import render
    from django.http import HttpResponse
    from .models import TodoList, Item


    def index(response, id):
        ls = TodoList.objects.get(id=id)
        # item = ls.item_set.get(id=1)
        return render(response, "main/list.html", {"ls": ls})


    def home(response):
        return render(response, "main/home.html", {})

FORMS

    create.html
    {% extends 'main/base.html' %}

    {% block title %}
      Create new list
    {% endblock %}

    {% block content %}
      Create new list
      <form method="post" action="/create/">
        {% csrf_token %} <!-- Needed for security -->
        {{form.as_p}} <!-- as_table - default as_p - goes down as_ul - as dots -->
        <button type="submit" name="save">Here's the button</button>
      </form>
    {% endblock %}

    forms.py
    from django import forms

    class CreateNewList(forms.Form):
        name = forms.CharField(label="Name", max_length=200)
        check = forms.BooleanField(required=False)

    views.py
    def create(response):
        if response.method == "POST":
            form = CreateNewList(response.POST)

            if form.is_valid():
                n = form.cleaned_data["name"]
                t = TodoList(name=n)
                t.save()
            return HttpResponseRedirect("/%i" % t.id)

        else:
            form = CreateNewList()
        return render(response, "main/create.html", {"form": form})

CUSTOM FORMS

    views.py
    def index(response, id):
        ls = TodoList.objects.get(id=id)
        if response.method == "POST":
            # if response.POST.get("save"):
            for item in ls.item_set.all():
                if response.POST.get("c" + str(item.id)) == "clicked":
                    item.complete = True
                else:
                    item.complete = False

                item.save()
            if response.POST.get("newItem"):
                txt = response.POST.get("new")

                if len(txt) > 2:
                    ls.item_set.create(text=txt, complete=False)

        return render(response, "main/list.html", {"ls": ls})

    list.html
    {% extends "main/base.html" %}
    {% block title %}View List{% endblock %}

    {% block content %}
        <h1>{{ls.name}}</h1>
        <form method="post" action="#">
        {% csrf_token %}
            <ul>
                {% for item in ls.item_set.all %}
                    {% if item.complete == True %}
                        <li><input type="checkbox", value="clicked", name="c{{item.id}}" checked>{{item.text}}</li>
                    {% else %}
                        <li><input type="checkbox", value="clicked", name="c{{item.id}}">{{item.text}}</li>
                    {% endif %}
                {% endfor %}
            </ul>
            <button type="submit", name="newItem", value="newItem">Add Item</button>
            <input type="text", name="new">
            <button type="submit", name="save", value="save">Save</button>
        </form>
    {% endblock %}

SIDEBARS

    base.html
    <html>
    <head>
        <style type="text/css">
            .sidenav {
                height:100%;
                width:160px;
                position: fixed;
                z-index:1;
                top:0;
                left:0;
                background-color:#111;
                overflow-x: :hidden;
                padding-top:20px;
            }

            .sidenav a {
                padding:6px 8px 6px 16px;
                text-decoration: none;
                font-size:25px;
                color: #818181;
                display:block;
            }

            .sidenav a:hover{
                color:#f1f1f1;
            }

            .main{
                margin-left:160px;
                padding: 0px 10px;
            }

        </style>
        <title>{% block title %}Tim's Site{% endblock %}</title>
    </head>

    <body>
        <div class="sidenav">
            <a href="/">Home</a>
            <a href="/create">Create</a>
            <a href="/2">View</a>
        </div>

        {% block content %}
        {% endblock %}

    </body>
    </html>
